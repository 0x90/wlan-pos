#!/bin/bash
# script for gunicorn control.
# $0 [options]

PATH_WPPTOOL=`dirname $0`
PATH_WPPWSGI=$PATH_WPPTOOL/web/wsgi
LOGDIR=$PATH_WPPWSGI/log
[ -d $LOGDIR ] || mkdir -p $LOGDIR
PFILE=/tmp/gunicorn.pid
W_MH="egg:meinheld#gunicorn_worker"
W_GE="egg:gunicorn#gevent"
APP=wpp_server:wpp_handler
port=8080
TOUT=10

start_gunic() {
    #nworkers=`python -c 'import os; \
    #    nps=os.sysconf("SC_NPROCESSORS_ONLN"); \
    #    nps=(nps*2 if (nps<=5) else (nps+1)); \
    #    print nps'`
    nps=`cat /proc/cpuinfo  |grep processor |wc -l`
    #[ $nps -lt 5 ] && nworkers=`echo "$nps*2" |bc` || nworkers=`echo "$nps+1" |bc`
    nworkers=`echo "$nps*2" |bc`
    echo "workers: $nworkers"

    datetime=`date +%Y%m%d-%H%M%S`
    GU_LOG=log/gunicorn_$datetime.log
    #WPP_LOG=log/wpp.log
    WPP_LOG=/dev/null
    cd $PATH_WPPWSGI
    touch $GU_LOG
    # check if the size of logfile.
    if [ -f $WPP_LOG ]; then
        nline=`wc -l $WPP_LOG |awk '{print $1}'`
        #echo $nline
        if [ $nline -gt 500000 ]; then 
            mv -f ${WPP_LOG} ${WPP_LOG}_$datetime 
            tar cjvf ${WPP_LOG}_$datetime.tbz2 ${WPP_LOG}_$datetime
            rm -f ${WPP_LOG}_$datetime
        fi
    fi
    CMD="gunicorn -b :$port -w $nworkers $APP --log-file $GU_LOG -p $PFILE -t $TOUT"
    #CMD="gunicorn -b :$port -w $nworkers -k $W_MH $APP --log-file $GU_LOG -p $PFILE -t $TOUT"
    #CMD="gunicorn -b :$port -w $nworkers -k $W_GE $APP --log-file $GU_LOG -p $PFILE -t $TOUT"
    echo -e "\n\n##### LOG START @ $datetime #####\n" >> $WPP_LOG
    nohup  $CMD >> $WPP_LOG 2>&1 &
}

count_workers(){
    nprocs=`pskill -l gunicorn |wc -l`
    [ $nprocs -gt 1 ] && nworkers=`echo "$nprocs-1" |bc` || nworkers=$nprocs
    echo $nworkers
}

case "$1" in
    start)
        start_gunic
        ;;
    stop)
        pskill gunicorn
        ;;
    reload)
        kill -HUP `cat $PFILE`
        ;;
    addw)
        addw_num=$2
        [ $addw_num -ge 1 ] || exit 99
        echo -ne "Adding from $(count_workers) "
        for i in $(seq $addw_num)
        do
            kill -TTIN `cat $PFILE`
            echo -n "."
            sleep 1
        done
        echo " to $(count_workers) workers"
        ;;
    delw)
        delw_num=$2
		nprocs=`pskill -l gunicorn |wc -l`
		nworkers=`echo "$nprocs-1" |bc`
        [ $delw_num -ge $nworkers ] && exit 99
		echo -ne "Decreasing from $(count_workers) "
		for i in $(seq $delw_num)
		do
			kill -TTOU `cat $PFILE`
			echo -n "."
			sleep 1
		done
		echo " to $(count_workers) workers"
        ;;
    status)
		nworkers=$(count_workers)
		echo "workers: $nworkers"
        ;;
    *)
        echo "Usage: $0 {start|stop|reload|status|addw <num>|delw <num>}"
        exit 1
        ;;
esac
